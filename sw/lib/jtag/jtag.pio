.program jtag
.side_set 1 opt

; Pin assignments:
; - TCK is side-set pin 0
; - TMS or TDI is OUT pin 0
; - TDO is IN pin 0


public lastbit:                 ; The X here should be len - 2
    out pins, 1         side 0 [1]
    in pins, 1          side 1
    jmp X-- lastbit     side 1

    out pins, 1         side 0
    set pins, 1         side 0  ; Set last bit
    in pins, 1          side 1
    set Y, 0            side 1
    mov pins, Y         side 0  ; Reset pin
    push                        ; Push the remaining part of response

.wrap_target
public entry_point:
    pull                side 0  ; Wait next command
    out X, 27                   ; Get transfer size
    out pc, 5                   ; Get last bit

public common:
    out pins, 1         side 0 [1]
    in pins, 1          side 1
    jmp X-- common      side 1
    set Y, 0            side 0
    mov pins, Y                 ; Reset pin
    push                        ; Push the remaining part of response
.wrap

% c-sdk {
#include "hardware/gpio.h"
static inline void pio_jtag_init(PIO pio, uint sm, uint off, uint16_t clkdiv,
    uint pin_tck, uint pin_tms, uint pin_tdi, uint pin_tdo) {

    pio_sm_config c = jtag_program_get_default_config(off);
    sm_config_set_sideset_pins(&c, pin_tck);
    // Out pins will be set dynamically
    sm_config_set_set_pins(&c, pin_tms, 1);
    sm_config_set_in_pins(&c, pin_tdo);
    sm_config_set_out_shift(&c, true, true, 32);
    sm_config_set_in_shift(&c, true, true, 32);
    sm_config_set_clkdiv_int_frac(&c, clkdiv, 0);

    pio_gpio_init(pio, pin_tck);
    pio_gpio_init(pio, pin_tms);
    pio_gpio_init(pio, pin_tdi);
    pio_gpio_init(pio, pin_tdo);
    pio_sm_set_pins_with_mask(pio, sm, 0, (1u << pin_tck) | (1u << pin_tms) | (1u << pin_tdi));
    pio_sm_set_pindirs_with_mask(pio, sm, (1u << pin_tck) | (1u << pin_tms) | (1u << pin_tdi),
        (1u << pin_tck) | (1u << pin_tms) | (1u << pin_tdi) | (1u << pin_tdo));

    // JTAG is synchronous, so bypass input synchroniser to reduce input delay.
    hw_set_bits(&pio->input_sync_bypass, 1u << pin_tdo);

    pio_sm_init(pio, sm, off + jtag_offset_entry_point, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
